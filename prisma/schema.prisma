// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model Store {
  id        String @id @default(uuid())
  name      String
  userId    String
  billboards Billboard[] @relation("StoreToBillboard") 
  categories Category[] @relation("StoreToCategory")
  sizes Size[] @relation("StoreToSize")
  colors Color[] @relation("StoreToColor")
  products Product[] @relation("StoreToProduct")
  orders Orden[] @relation("StoreToOrder")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 
}

model Billboard {
  id  String @id @default(uuid())
  storeId String 
  store Store @relation("StoreToBillboard", fields: [storeId], references: [id])
  label String
  imageUrl String
  categories Category[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}

model Category {
  id  String @id @default(uuid())
  storeId String
  store Store @relation("StoreToCategory", fields: [storeId], references: [id])
  billboardId String
  billboard Billboard @relation(fields: [billboardId], references: [id])
  products Product[] @relation("CategoryToProduct")
  name String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
  @@index([billboardId])
}

model Size {
  id  String @id @default(uuid())
  storeId String 
  store Store @relation("StoreToSize", fields: [storeId], references: [id])
  products Product[]
  name String
  value String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}

model Color {
  id  String @id @default(uuid())
  storeId String 
  store Store @relation("StoreToColor", fields: [storeId], references: [id])
  products Product[]
  name String
  value String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}

model Product {
  id  String @id @default(uuid())
  storeId String 
  store Store @relation("StoreToProduct", fields: [storeId], references: [id])
  categoryId String
  category Category @relation("CategoryToProduct", fields: [categoryId], references: [id])
  sizeId String
  size Size @relation( fields: [sizeId], references: [id])
  colorId String
  color Color @relation( fields: [colorId], references: [id])
  photo Image[]
  nombre String
  precio Decimal
  pedido Pedido[]
  descripcion String
  descuento Decimal
  tipo_descuento String
  isFeatured Boolean @default(false)
  isDelete Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
  @@index([categoryId])
  @@index([sizeId])
  @@index([colorId])
}

model Image {
  id String @id @default(uuid())
  productId String
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  url String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([productId])
}

model Orden {
  id String @id @default(uuid())
  storeId String
  store Store @relation("StoreToOrder", fields: [storeId], references: [id])
  compradorId String
  comprador Comprador @relation(fields: [compradorId], references: [id])
  compras_items Pedido[]
  descripcion_resumen String
  fecha_maxima_pago String
  id_pedido_comercio String
  monto_total Decimal
  public_key String
  tipo_pedido String
  token String
  cancelado Boolean
  pagado Boolean
  forma_pago_identificador Decimal
  numero_pedido String
  forma_pago String
  fecha_pago String
  hash_pedido String
  isDeleted Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
  @@index([compradorId])
}

model Pedido {
  id String @id @default(uuid())
  orderId String
  orden Orden @relation(fields: [orderId], references: [id])
  productId String
  product Product @relation(fields: [productId], references: [id])
  compradorId String
  comprador Comprador @relation(fields: [compradorId], references: [id])
  monto_total Decimal
  fecha_maximo_pago DateTime
  isDeleted Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([orderId])
  @@index([productId])
  @@index([compradorId])
}

model Comprador {
  id String @id @default(uuid())
  nombre String
  direccion String
  email String
  ruc String
  documento String
  razon_social String
  tipo_document String
  ciudad String
  coordenadas String
  telefono String
  direccion_referencia String
  isDeleted Boolean
  pedido Pedido[]
  orden Orden[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}